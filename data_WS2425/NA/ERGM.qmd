---
title: "ERGM"
format: html
editor: visual
---

```{r}
install.packages("RSiena")
```

```{r}
#library(reticulate)
#use_python("/Users/ramius/.pyenv/versions/3.12.0/bin", required = TRUE)
library(devtools)
library(networkdata)
library(jsonlite)
library(networkdata)
# Load libraries
library(igraph)
library(statnet)
library(intergraph)
#library(RSiena)
```

------------------------------------------------------------------------

```{r}
setwd("~/Desktop/CodeVault/01_Project/Work/Susumu/Student_Survey/StudentSurvey_GitDock/data_WS2425/NA")
```

```{r}
# Read graph from GML file using igraph
G_multi_w3 <- read.graph("multiplex_graph_w3.gml", format = "gml")
```

```{r}
G_statnet_w3 <- asNetwork(G_multi_w3)
```

```{r}

```

```{r}
# Step 3: Set the vertex attributes
for (attr_name in names(node_attributes)) {
  set.vertex.attribute(G_statnet, attr_name, node_attributes[[attr_name]])
}
```

```{r}
# Step 3: Check the summary of the network object
summary(G_statnet)
class(G_statnet)
```

```{r}
surveymodel.01 <- ergm(G_multi_w3~edges)
summary(surveymodel.01)
```

```{r}
bottmodel.03 <- ergm(G_statnet~edges+nodecov('age'))
summary(bottmodel.03)
```

------------------------------------------------------------------------

```{r}
# Read graph from GML file using igraph
Gmulti_igraph <- read.graph("multiplex_graph.gml", format = "gml")

summary(Gmulti_igraph)
# Step 2: Convert the igraph object to a statnet network object
#Gmulti_statnet <- as.network(Gmulti_igraph, directed = is.directed(G_igraph))
```
